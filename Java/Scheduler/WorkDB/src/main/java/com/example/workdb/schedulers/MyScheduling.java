package com.example.workdb.schedulers;

import com.example.workdb.entities.Author;
import org.springframework.context.annotation.Configuration;
import org.springframework.scheduling.annotation.Async;
import org.springframework.scheduling.annotation.EnableAsync;
import org.springframework.scheduling.annotation.EnableScheduling;
import org.springframework.scheduling.annotation.Scheduled;

import java.time.LocalDateTime;

@Configuration
@EnableScheduling

public class MyScheduling {


    int count = 1;

    //       ---------------------------------------- секунда     (0-59)
    //       |   ------------------------------------ минута      (0-59)
    //       |   |   -------------------------------- час         (0-23)
    //       |   |   |   ---------------------------- день месяцв (1-31)
    //       |   |   |   |   ------------------------ месяцв      (1-12)
    //       |   |   |   |   |   -------------------- день недели (0-7)
    //       |   |   |   |   |   |
    //       |   |   |   |   |   |
    //       |   |   |   |   |   |
    //       |   |   |   |   |   |

    //       *   *   *   *   *   *

    // *     -> любое значение
    // ?     -> любое значение (дня месяца или недели)
    // 1-2   -> диапазон значений (MON-FRI)
    // 1,2,3 -> сисок значений (MON-FRI)
    // /     -> */5  каждые 5 секунд
    // L     -> последний день недели или месяца
    // W     -> ближайший рабочий день
    // #     -> ближайший рабочий день

    //1. Каждую секунду
    @Scheduled(cron = "* * * * * *")
    // 2. Каждую минуту в 0 секунд
    @Scheduled(cron = "0 * * * * *")
    // 3. Каждый час в начале часа
    @Scheduled(cron = "0 0 * * * *")
    // 4. Каждый день в полночь
    @Scheduled(cron = "0 0 0 * * *")
    // 5. Первого числа каждого месяца в полночь
    @Scheduled(cron = "0 0 0 1 1-12 *")

    // 6. Каждый день в 10:30:00
    @Scheduled(cron = "0 30 10 * * *")
    // 7. Каждый день в 15:45:30
    @Scheduled(cron = "30 45 15 * * *")
    // 8. Каждое воскресенье в 9:00:00
    @Scheduled(cron = "0 0 9 * * 7")
    // 9. Каждый понедельник в 8:15:00
    @Scheduled(cron = "0 15 8 * * 1")
    // 10. 15 января каждого года в 12:00:00
    @Scheduled(cron = "0 0 12 15 1 *")

    // 11. Каждые 30 секунд
    @Scheduled(cron = "*/30 * * * * *")
    // 12. Каждые 15 минут
    @Scheduled(cron = "0 */15 * * * *")
    // 13. Каждые 2 часа в начале часа
    @Scheduled(cron = "0 0 */2 * * *")
    // 14. Каждые 5 дней в полночь
    @Scheduled(cron = "0 0 0 */5 * *")
    // 15. Каждые 3 месяца первого числа
    @Scheduled(cron = "0 0 0 1 */3 *")

    // 16. В определенные секунды каждой минуты
    @Scheduled(cron = "0,15,30,45 * * * * *")
    // 17. В определенные минуты каждого часа
    @Scheduled(cron = "* 5,10,15 * * * *")
    // 18. В рабочие часы (9, 12, 15 часов)
    @Scheduled(cron = "00 00 9,12,15 * * *")
    // 19. В определенные дни недели
    @Scheduled(cron = "0 0 * * * 1,3,5")
    // 20. В летние месяцы каждую пятницу
    @Scheduled(cron = "0 0 0 * 6,7,8 5")

    // 21. Каждую минуту в рабочие часы
    @Scheduled(cron = "0 * 8-17 * * 1-5")
    // 22. Каждый час в будние дни
    @Scheduled(cron = "0 0 * * * 1-5")
    // 23. В середине каждого месяца
    @Scheduled(cron = "0 0 0 15 * *")
    // 24. В первой половине года по выходным
    @Scheduled(cron = "0 0 0 * 1-6  6,7")
    // 25. Каждые 5 секунд в определенном диапазоне минут
    @Scheduled(cron = "*/5 3-10 * * * *")

    // 26. Последний день каждого месяца в 23:59:59
    @Scheduled(cron = "59 59 23 L * *")
    // 27. Последняя пятница каждого месяца в 17:00
    @Scheduled(cron = "0 0 17 * * 6L")
    // 28. Последний рабочий день месяца
    @Scheduled(cron = "0 0 0 LW * *")

    // 29. Вторая среда каждого месяца
    @Scheduled(cron = "0 0 0 * * 3#2")
    // 30. Третий понедельник каждого месяца в январе и июле
    @Scheduled(cron = "0 0 0 * 1,7 1#3")

    // 31. Рабочие дни каждые 30 минут с 9 до 18
    @Scheduled(cron = "0 */30 9-18 * * 1-5")
    // 32. Каждые 10 секунд в первые 5 минут каждого часа
    @Scheduled(cron = "*/10 0-5 * * * *")
    // 33. Каждый квартал в первый день в полночь
    @Scheduled(cron = "0 0 0 1 */3 *")
    // 34. Последнее воскресенье марта (переход на летнее время в EU)
    @Scheduled(cron = "0 0 0 L-7 3 *")
    // 35. Будние дни каждые 2 часа кроме обеда
    @Scheduled(cron = "0 0 9,11,13,15,17 * * 1-5")

    // 36. Резервное копирование каждую ночь в 2:30
    @Scheduled(cron = "0 30 2 * * *")
    // 37. Очистка логов каждое воскресенье в 3:00
    @Scheduled(cron = "0 0 3 * * 7")
    // 38. Отчет каждый первый рабочий день месяца
    @Scheduled(cron = "0 0 0 1 * 1-5")
    // 39. Проверка системы каждые 5 минут в рабочее время
    @Scheduled(cron = "0 */5 9-18 * * 1-5")
    // 40. Напоминание о встрече каждую пятницу в 16:30
    @Scheduled(cron = "0 30 16 * * 5")

    public void executeQrafik(){

        System.out.println("Hello World : " + count++);
    }

}
